apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mastodon-bot-cli-listen-img
  name: mastodon-bot-cli-listen-img
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: mastodon-bot-cli-listen-img
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mastodon-bot-cli-listen-img
    spec:
      containers:
        - name: mastodon-bot-cli-listen-img
          command:
            - /bin/sh
            - "-c"
            - |
              mastodonbotcli listen \
                "$mastodon_host" \
                "$mastodon_client_key" \
                "$mastodon_client_secret" \
                "$mastodon_access_token" \
                "$open_ai_api_key" \
                "OPEN_AI_IMAGE"
          image: robermar2/mastodon-bot-cli:v0.1.1
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          env:
            - name: mastodon_host
              value: "robermar.social"
            - name: mastodon_client_key
              valueFrom:
                secretKeyRef:
                  name: mastodon-img
                  key: mastodon_client_key
            - name: mastodon_client_secret
              valueFrom:
                secretKeyRef:
                  name: mastodon-img
                  key: mastodon_client_secret
            - name: mastodon_access_token
              valueFrom:
                secretKeyRef:
                  name: mastodon-img
                  key: mastodon_access_token
            - name: open_ai_api_key
              valueFrom:
                secretKeyRef:
                  name: mastodon-img
                  key: open_ai_api_key
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
